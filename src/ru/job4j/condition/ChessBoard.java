package ru.job4j.condition;

/**
 * @Раздел Блок 1. Базовый Синтаксис. / 3. Оператор ветвления.
 * @Задание 4.3.6. Math.abs. [#373616]
 * @Описание 1. Вам необходимо реализовать метод way для фигуры слон. Напомню, что эта фигура двигается только по диагонали.
 * 2. Очень важно - прежде чем вычислять количество ходов, нужно проверить ходит ли фигура по переданным координатам
 * по диагонали. Фигура ходит по диагонали только в том случае, если координаты x и y изменяются в процессе движения
 * одинаково. Если это условие не выполняется, то метод должен вернуть 0. Также обратите внимание, что координаты X и Y
 * для нашей шахматной доски варьируются в пределах от 0 и до 7. Т.е. если передаваемые в метод координаты превышают эти
 * значения - то метод также должен вернуть 0 (если хотя бы одна из координат является отрицательным числом, или больше 7).
 * 3. Протестируйте код в junit.
 * 2. Загрузите файл на сайт github.com и оставьте ссылку на изменения.
 * @author Sergei Begletsov
 * @since 21.07.2020
 * @version 1
 */

public class ChessBoard {
    /**
     * Метод проверяет, что число положительное
     * @param num входное число
     * @return true - положительное, false - отрицательное
     */
    public static boolean isPositive(int num) {
        return num >= 0;
    }

    /**
     * Метод проверяет, что число меньше 8
     * @param num входное число
     * @return true - число < 8, false - число >= 8
     */
    public static boolean isLessThan8(int num) {
        return num < 8;
    }

    /**
     * Метод проверяет, что число меньше 8 И положительное
     * @param num входное число
     * @return true - выполняется два условия, false - не выполняются условия
     */
    public static boolean positiveAndLessThan8(int num) {
        return isPositive(num) && isLessThan8(num);
    }

    /**
     * Метод проверяет и возврщает расстояние, которое прошел слон на шахматной доске
     * @param x1 - координаты точки1
     * @param y1 - координаты точки1
     * @param x2 - координаты точки2
     * @param y2 - координаты точки2
     * @return num - если ход слона правильный, 0 - если условия не выполняются
     */
    public static int way(int x1, int y1, int x2, int y2) {
        int rsl = 0;
        if (positiveAndLessThan8(x1) && positiveAndLessThan8(y1)
            && positiveAndLessThan8(x2) && positiveAndLessThan8(y2)) {
            //Вариант 1
            //rsl = Math.abs(x1 - x2) - Math.abs(y1 - y2) == 0 ? Math.abs(x1 - x2) : 0;
            //Вариант 2
            rsl = Math.abs(x1 - x2);
            rsl = rsl - Math.abs(y1 - y2) == 0 ? rsl : 0;
        }
        return rsl;
    }
}
